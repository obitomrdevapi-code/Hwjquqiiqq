const express = require("express");
const axios = require("axios");

const router = express.Router();

/**
 * جلب معلومات الحساب من API
 */
async function fetchAccountInfo(uid) {
  const url = `https://hridoy-ff-1.onrender.com/api/info?uid=${uid}`;
  const { data } = await axios.get(url, { timeout: 10000 });
  
  const { credit, ...filteredData } = data;
  return filteredData;
}

/**
 * إنشاء HTML مع المعلومات
 */
function createHTML(accountInfo) {
  const playerName = accountInfo.player || "غير معروف";
  const level = accountInfo.level || "1";
  const tier = accountInfo.tier || "برونزي";
  const exp = accountInfo.exp || "0";
  const gold = accountInfo.gold || "0";
  const diamond = accountInfo.diamond || "0";
  const uid = accountInfo.uid || "غير معروف";

  return `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <style>
    body {
      margin: 0;
      padding: 0;
      width: 800px;
      height: 600px;
      background: url('https://files.catbox.moe/gg4vsg.jpg') no-repeat center center;
      background-size: cover;
      font-family: Arial, sans-serif;
      color: white;
      position: relative;
    }
    .container {
      padding: 20px;
      position: relative;
      height: 100%;
    }
    .header {
      text-align: right;
      padding: 20px 50px 0 0;
    }
    .obito {
      font-size: 32px;
      font-weight: bold;
      color: #FFD700;
      margin-bottom: 5px;
    }
    .wr {
      font-size: 24px;
      font-weight: bold;
      color: #FFFFFF;
    }
    .info-section {
      position: absolute;
      left: 50px;
      top: 150px;
    }
    .info-item {
      margin-bottom: 20px;
      display: flex;
      align-items: center;
    }
    .label {
      font-size: 20px;
      font-weight: bold;
      color: #FFD700;
      width: 120px;
    }
    .value {
      font-size: 20px;
      color: #FFFFFF;
      margin-left: 30px;
    }
    .small {
      font-size: 18px;
    }
    .footer {
      position: absolute;
      bottom: 30px;
      left: 0;
      right: 0;
      text-align: center;
      color: rgba(255, 255, 255, 0.7);
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <div class="obito">OBITO</div>
      <div class="wr">WR</div>
    </div>
    
    <div class="info-section">
      <div class="info-item">
        <div class="label">PLAYER:</div>
        <div class="value">${playerName}</div>
      </div>
      <div class="info-item">
        <div class="label">LEVEL:</div>
        <div class="value">${level}</div>
      </div>
      <div class="info-item">
        <div class="label">TIER:</div>
        <div class="value">${tier}</div>
      </div>
      <div class="info-item">
        <div class="label">EXP:</div>
        <div class="value">${exp}</div>
      </div>
      <div class="info-item">
        <div class="label small">GOLD:</div>
        <div class="value small">${gold}</div>
      </div>
      <div class="info-item">
        <div class="label small">DIAMOND:</div>
        <div class="value small">${diamond}</div>
      </div>
      <div class="info-item">
        <div class="label small">UID:</div>
        <div class="value small">${uid}</div>
      </div>
    </div>
    
    <div class="footer">
      Free Fire Account Info - Generated by OBITO
    </div>
  </div>
</body>
</html>
  `;
}

/**
 * نقطة النهاية الرئيسية
 */
router.get("/freefire", async (req, res) => {
  const uid = req.query.id;
  
  if (!uid || isNaN(uid) || uid.length < 6) {
    return res.status(400).json({
      status: 400,
      success: false,
      message: "⚠️ يرجى إدخال ايدي حساب صالح (أرقام فقط)"
    });
  }

  try {
    const info = await fetchAccountInfo(uid);
    
    if (!info || Object.keys(info).length === 0) {
      return res.status(404).json({
        status: 404,
        success: false,
        message: "❌ لم يتم العثور على حساب بهذا الـ ID"
      });
    }
    
    // إرسال HTML كرد
    res.set({
      'Content-Type': 'text/html; charset=utf-8'
    });
    
    res.send(createHTML(info));
    
  } catch (err) {
    console.error('Error:', err.message);
    
    if (err.response?.status === 404) {
      return res.status(404).json({
        status: 404,
        success: false,
        message: "❌ الحساب غير موجود"
      });
    }
    
    res.status(500).json({
      status: 500,
      success: false,
      message: "حدث خطأ أثناء معالجة الطلب.",
      error: err.message
    });
  }
});

// نقطة نهاية بديلة تعرض JSON
router.get("/freefire/json", async (req, res) => {
  const uid = req.query.id;
  
  if (!uid || isNaN(uid) || uid.length < 6) {
    return res.status(400).json({
      status: 400,
      success: false,
      message: "⚠️ يرجى إدخال ايدي حساب صالح (أرقام فقط)"
    });
  }

  try {
    const info = await fetchAccountInfo(uid);
    
    res.json({
      status: 200,
      success: true,
      account: info
    });
    
  } catch (err) {
    res.status(500).json({
      status: 500,
      success: false,
      message: "حدث خطأ أثناء استخراج معلومات الحساب.",
      error: err.message
    });
  }
});

module.exports = {
  path: "/api/info",
  name: "free fire inf generator",
  type: "info",
  url: `${global.t}/api/info/freefire?id=1010493740`,
  logo: "https://qu.ax/obitoajajq.png",
  description: "م",
  router,
};