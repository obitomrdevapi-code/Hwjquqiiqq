const express = require("express");
const axios = require("axios");
const { createCanvas, loadImage, registerFont } = require("canvas");
const path = require("path");

const router = express.Router();

/**
 * جلب معلومات الحساب من API
 */
async function fetchAccountInfo(uid) {
  const url = `https://hridoy-ff-1.onrender.com/api/info?uid=${uid}`;
  const { data } = await axios.get(url, { timeout: 10000 });
  
  const { credit, ...filteredData } = data;
  return filteredData;
}

/**
 * إنشاء الصورة مع المعلومات
 */
async function createInfoImage(accountInfo) {
  // تحميل الصورة الخلفية
  const backgroundUrl = "https://files.catbox.moe/gg4vsg.jpg";
  const background = await loadImage(backgroundUrl);
  
  // إنشاء canvas بنفس أبعاد الصورة الخلفية
  const canvas = createCanvas(background.width, background.height);
  const ctx = canvas.getContext('2d');
  
  // رسم الصورة الخلفية
  ctx.drawImage(background, 0, 0);
  
  // إعدادات النص
  const textColor = "#FFFFFF"; // أبيض
  const accentColor = "#FFD700"; // ذهبي
  const fontSizeLarge = 32;
  const fontSizeMedium = 24;
  const fontSizeSmall = 18;
  
  // المعلومات الأساسية المستخرجة
  const playerName = accountInfo.player || "غير معروف";
  const level = accountInfo.level || "1";
  const tier = accountInfo.tier || "برونزي";
  const exp = accountInfo.exp || "0";
  const gold = accountInfo.gold || "0";
  const diamond = accountInfo.diamond || "0";
  const uid = accountInfo.uid || "غير معروف";

  // إعدادات النص للعربية
  ctx.textAlign = "right"; // مهم للغة العربية
  ctx.textBaseline = "top";
  
  // إضافة تأثير ظل للنص
  ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';
  ctx.shadowBlur = 6;
  ctx.shadowOffsetX = 3;
  ctx.shadowOffsetY = 3;

  // اسم اللاعب (أعلى اليمين - لأن النص عربي)
  ctx.fillStyle = accentColor;
  ctx.font = `bold ${fontSizeLarge}px 'Arial'`;
  ctx.fillText(`OBITO`, canvas.width - 50, 40);
  
  ctx.fillStyle = textColor;
  ctx.font = `bold ${fontSizeMedium}px 'Arial'`;
  ctx.fillText(`WR`, canvas.width - 50, 80);

  // المعلومات الأساسية (على اليسار)
  ctx.textAlign = "left"; // للمعلومات الإنجليزية والأرقام
  
  // PLAYER NAME
  ctx.fillStyle = accentColor;
  ctx.font = `bold ${fontSizeMedium}px 'Arial'`;
  ctx.fillText(`PLAYER:`, 50, 150);
  ctx.fillStyle = textColor;
  ctx.fillText(playerName, 200, 150);
  
  // LEVEL
  ctx.fillStyle = accentColor;
  ctx.fillText(`LEVEL:`, 50, 190);
  ctx.fillStyle = textColor;
  ctx.fillText(level, 200, 190);
  
  // TIER
  ctx.fillStyle = accentColor;
  ctx.fillText(`TIER:`, 50, 230);
  ctx.fillStyle = textColor;
  ctx.fillText(tier, 200, 230);
  
  // EXP
  ctx.fillStyle = accentColor;
  ctx.fillText(`EXP:`, 50, 270);
  ctx.fillStyle = textColor;
  ctx.fillText(exp, 200, 270);
  
  // العملات
  ctx.font = `bold ${fontSizeSmall}px 'Arial'`;
  
  // GOLD
  ctx.fillStyle = accentColor;
  ctx.fillText(`GOLD:`, 50, 310);
  ctx.fillStyle = textColor;
  ctx.fillText(gold, 200, 310);
  
  // DIAMOND
  ctx.fillStyle = accentColor;
  ctx.fillText(`DIAMOND:`, 50, 340);
  ctx.fillStyle = textColor;
  ctx.fillText(diamond, 200, 340);
  
  // UID
  ctx.fillStyle = accentColor;
  ctx.fillText(`UID:`, 50, 370);
  ctx.fillStyle = textColor;
  ctx.fillText(uid, 200, 370);

  // إزالة الظل للمعلومات الإضافية في الأسفل
  ctx.shadowColor = 'transparent';
  ctx.shadowBlur = 0;
  ctx.shadowOffsetX = 0;
  ctx.shadowOffsetY = 0;

  // معلومات إضافية في الأسفل
  ctx.textAlign = "center";
  ctx.fillStyle = "rgba(255, 255, 255, 0.7)";
  ctx.font = `14px 'Arial'`;
  ctx.fillText(`Free Fire Account Info - Generated by OBITO`, canvas.width / 2, canvas.height - 30);

  return canvas.toBuffer('image/jpeg', { quality: 0.95 });
}

/**
 * نقطة النهاية الرئيسية
 */
router.get("/freefire", async (req, res) => {
  const uid = req.query.id;
  
  if (!uid || isNaN(uid) || uid.length < 6) {
    return res.status(400).json({
      status: 400,
      success: false,
      message: "⚠️ يرجى إدخال ايدي حساب صالح (أرقام فقط)"
    });
  }

  try {
    const info = await fetchAccountInfo(uid);
    
    if (!info || Object.keys(info).length === 0) {
      return res.status(404).json({
        status: 404,
        success: false,
        message: "❌ لم يتم العثور على حساب بهذا الـ ID"
      });
    }
    
    // إنشاء الصورة
    const imageBuffer = await createInfoImage(info);
    
    // إرسال الصورة كرد
    res.set({
      'Content-Type': 'image/jpeg',
      'Content-Length': imageBuffer.length,
      'Cache-Control': 'public, max-age=3600'
    });
    
    res.send(imageBuffer);
    
  } catch (err) {
    console.error('Error:', err.message);
    
    if (err.response?.status === 404) {
      return res.status(404).json({
        status: 404,
        success: false,
        message: "❌ الحساب غير موجود"
      });
    }
    
    res.status(500).json({
      status: 500,
      success: false,
      message: "حدث خطأ أثناء معالجة الطلب.",
      error: err.message
    });
  }
});

// نقطة نهاية بديلة تعرض JSON
router.get("/freefire/json", async (req, res) => {
  const uid = req.query.id;
  
  if (!uid || isNaN(uid) || uid.length < 6) {
    return res.status(400).json({
      status: 400,
      success: false,
      message: "⚠️ يرجى إدخال ايدي حساب صالح (أرقام فقط)"
    });
  }

  try {
    const info = await fetchAccountInfo(uid);
    
    res.json({
      status: 200,
      success: true,
      account: info
    });
    
  } catch (err) {
    res.status(500).json({
      status: 500,
      success: false,
      message: "حدث خطأ أثناء استخراج معلومات الحساب.",
      error: err.message
    });
  }
});

module.exports = {
  path: "/api/info",
  name: "free fire info image generator",
  type: "tools",
  url: `${global.t}/api/info/freefire?id=1010493740`,
  logo: "https://qu.ax/obitoajajq.png",
  description: "إنشاء صورة احترافية لمعلومات حساب فري فاير",
  router,
};